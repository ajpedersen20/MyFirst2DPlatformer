Player player = new Player();
Clock clock = new Clock();
Leaderboard lb = new Leaderboard();

int screenType = 0;

// startingX, startingY, length, width, type
int[][] lvl1 = {{0,0,1000,10,0},{990,0,10,700,0},{0,0,10,700,0},{0,690,1000,10,0},{490,0,20,410,0},{0,190,410,20,0},
                {90,390,710,20,0},{90,390,20,220,0},{190,590,120,120,0},{390,390,120,120,0},{590,650,120,40,2},{890,590,120,20,0},
                {790,490,120,20,0},{540,340,20,20,1}};
int[][] lvl2 = {
                // left side
                {0,590,210,20,0},{90,90,20,420,0},{90,490,310,20,0},{190,90,20,320,0},{200,90,400,20,0},{290,190,20,320,0},
                {290,590,20,110,0},{290,290,320,20,0},{300,590,210,20,0},{390,90,20,120,0},{390,490,20,120,0},{390,390,110,20,0},
                {490,190,20,120,0},{490,390,20,120,0},{490,490,110,20,0},{590,90,20,120,0},{590,290,20,120,0},{590,490,20,120,0},
                {590,190,100,20,0},{590,590,100,20,0},
                // left side footholds
                {75,190,50,20,0},{75,390,50,20,0},{-25,290,50,20,0},{-25,490,50,20,0},{175,290,50,20,0},{-25,90,50,20,0},
                {275,390,50,20,0},
                // right side
                {690,90,220,20,0},{790,190,110,20,0},{900,190,100,20,2},{710,290,90,20,0},{800,290,110,20,2},{790,390,140,20,2},
                {710,490,200,20,0},{890,511,20,99,2},{690,90,20,520,2},{740,640,20,20,1},{931,390,59,20,0},
                // border
                {0,0,1000,10,0},{0,0,10,700,0},{0,690,800,20,0},{990,11,10,690,2},{800,690,200,10,2}
                };
int[][] lvl3 = {
                {690,590,220,20,0},{190,590,220,20,0},{-10,490,120,20,0},{290,390,220,20,0},{690,340,100,20,0},{780,240,120,20,0},
                {-10,190,420,20,0},{190,90,20,99,2},{0,0,10,190,2},{0,0,110,10,2},{90,0,20,110,2},{40,40,20,20,1}
                };
int[][] lvl4 = {{90,690,120,20,0},{290,690,120,20,0},{490,690,120,20,2},{690,690,120,20,0},{890,690,120,20,0},
                {90,590,120,20,0},{290,590,120,20,2},{490,590,120,20,0},{690,590,120,20,2},{890,590,120,20,0},
                {90,490,120,20,2},{290,490,120,20,0},{490,490,120,20,0},{690,490,120,20,2},{890,490,120,20,0},
                {90,390,120,20,0},{290,390,120,20,2},{490,390,120,20,0},{690,390,120,20,0},{890,390,120,20,2},
                {90,290,120,20,0},{290,290,120,20,2},{490,290,120,20,2},{690,290,120,20,2},{890,290,120,20,0},
                {90,190,120,20,0},{290,190,120,20,0},{490,190,120,20,0},{690,190,120,20,2},{890,190,120,20,2},
                {90,90,120,20,0},{290,90,120,20,2},{490,90,120,20,2},{690,90,120,20,0},{890,90,120,20,0},{940,40,20,20,1}};
int[][] lvl5 = {
                // border
                {0,0,1000,10,0},{0,0,10,700,0},{990,0,10,700,0},{0,690,1000,10,0},{940,640,20,20,1},
                // walls
                {290,90,20,620,0},{590,0,20,610,0},{890,110,20,600,0},
                // platforms
                {-10,90,120,20,0},{-10,290,120,20,0},{-10,490,120,20,0},{60,190,180,20,0},{60,390,180,20,0},{60,590,180,20,0},
                {190,90,220,20,0},{190,290,220,20,0},{190,490,220,20,0},{360,190,180,20,2},{360,390,180,20,2},{360,590,180,20,2},
                {490,90,110,20,0},{490,290,110,20,0},{490,490,170,20,0},{690,90,220,20,2},{611,190,29,20,2},{641,190,100,20,0},
                {742,190,90,20,2},{690,290,110,20,2},{801,290,100,20,0},{600,390,25,20,0},{661,490,65,20,2},{660,590,60,20,2},
                {721,590,100,20,0},{822,590,67,20,2}
                };
int[][] lvl6 = {                                
                // obstacles
                {490,590,20,110,2},{790,0,120,110,2},
                {590,0,120,110,2},{90,90,100,20,2},{110,190,100,20,2},{110,490,100,20,2},{190,490,20,120,2},
                {290,110,20,180,2},{310,90,200,20,2},{390,210,20,280,2},{490,90,20,320,2},{590,190,120,120,2},
                {590,390,220,20,2},{590,390,20,220,2},{790,190,120,120,2},{790,410,20,80,2},{890,510,20,100,2},
                // platforms
                {90,590,20,110,0},{0,190,110,20,0},{0,490,110,20,0},{890,290,110,120,0},{90,290,20,120,0},{90,290,220,20,0},
                {190,390,120,120,0},{190,90,120,20,0},{290,490,320,20,0},{490,290,420,20,0},{690,590,120,20,0},{790,490,120,20,0},
                // border
                {0,0,1000,10,0},{990,0,10,700,0},{0,0,10,700,0},{0,690,1000,10,0},{290,690,120,10,2},{690,690,220,10,2},
                // objective and footholds
                {940,40,20,20,1},{975,590,50,20,0},{-25,390,50,20,0},{375,390,50,20,0},{375,190,50,20,0},{475,290,50,20,0},
                {975,190,50,20,0}};

Level level1 = new Level(lvl1, 50, 50);
Level level2 = new Level(lvl2, 500, 30);
Level level3 = new Level(lvl3, 787, 525);
Level level4 = new Level(lvl4, 140, 640);
Level level5 = new Level(lvl5, 140, 640);
Level level6 = new Level(lvl6, 25, 625);

Level[] levels = {level1, level2, level3, level4, level5, level6};
Level currentLevel;

int levelIndex = 0;

public void updateLevel(int index){
  if(index >= levels.length){
    updateMenu(0);
    screenType = 0;
    if(clock.getDisplay())
      clock.stopClock();
  }else{
    currentLevel = levels[index];
    player.setResetValues(currentLevel.getStartingX(), currentLevel.getStartingY());
    if(index == 0)
      clock.startClock();
  }
}

// Menus
int[][] mMenu = {{400, 100, 200, 50, 0}, {400, 300, 200, 50, 0}, {400, 500, 200, 50, 0}};
String[] mmText = {"Level Selector", "Leaderboard", "Controls"};
Level mainMenuLevel = new Level(mMenu, 565, 50);
int[] menuIDs = {2, 3, 4};

int[][] lSelector = {{200, 100, 200, 50, 0}, {600, 100, 200, 50, 0}, {200, 300, 200, 50, 0},
                     {600, 300, 200, 50, 0}, {200, 500, 200, 50, 0}, {600, 500, 200, 50, 0},
                     {25, 25, 150, 30, 0}};
String[] lsText = {"Level 1", "Level 2", "Level 3" , "Level 4" , "Level 5" , "Level 6", "Back"};
Level lsLevel = new Level(lSelector, 690, 50);
int[] lsIDs = {-1, -2, -3, -4, -5, -6, 1};

int[][] lBoard = {{400, 100, 200, 50, 0}, {400, 300, 200, 50, 0}, {400, 500, 200, 50, 0},
                  {35, 35, 150, 30, 0}};
String[] lbText = {"--", "--", "--", "Back"}; // this could be hard
Level lbLevel = new Level(lBoard, 125, -15);
int[] lbIDs = {0, 0, 0, 1};

int[][] drctions = {{200, 100, 200, 50, 0}, {600, 100, 200, 50, 0}, {200, 300, 200, 50, 0},
                    {600, 300, 200, 50, 0}, {200, 500, 200, 50, 0}, {550, 450, 400, 50, 0},
                    {550, 500, 400, 50, 0}, {400, 575, 200, 50, 0}, {25, 25, 150, 30, 0}};
String[] dText = {"'A' - left", "'D' - right", "'J' - dash left", "'L' - dash right", "'W' - jump",
                  "Green Block - Obstacle", "Blue Block - Objective", "'R' - reset position", "Back"};
Level dLevel = new Level(drctions, 350, 50);
int[] dIDs = {0, 0, 0, 0, 0, 0, 0, 0, 1};

Menu mainMenu = new Menu(mainMenuLevel, mmText, menuIDs);
Menu levelSelector = new Menu(lsLevel, lsText, lsIDs);
Menu leaderboard = new Menu(lbLevel, lbText, lbIDs);
Menu directions = new Menu(dLevel, dText, dIDs);

Menu[] menus = {mainMenu, levelSelector, leaderboard, directions};
Menu currentMenu;

public void updateMenu(int id){
  currentMenu = menus[id];
  updateLevel(menus[id].getLevel());
}

public void updateLevel(Level l){
  currentLevel = l;
  player.setResetValues(l.getStartingX(), l.getStartingY());
}

boolean[] keys = new boolean[127];

public void keyPressed(){
  if(key >= 0 && key <= 127)
    keys[key] = true;
}

public void keyReleased(){
  if(key >= 0 && key <= 127)
    keys[key] = false;
}

void mousePressed(){
  if(screenType == 0)
    currentMenu.clicked(mouseX, mouseY);
}

void setup(){
  size(1000,700);
  frameRate(60);
  updateMenu(0);
}

void draw(){
  background(0);
  if(screenType == 0)
    currentMenu.menuUpdater();
  else
    currentLevel.levelUpdater();
  player.playerUpdater();
  clock.clockUpdater();
}
